Name,Property(Type)=>Type,Functions,Parent item,Sub-item,Parent-Repo,SubmoduleRepo
FeatureStore,store(Dict[str, Dict[str, Any]])=>FeatureStore,add_feature, get_feature, delete_feature,Metastore,ExtractTransformLoad,,
RepoConfig,config(Dict[str, Any])=>RepoConfig,,MetastoreAsset,,
ClientConfig,config(Dict[str, Any])=>ClientConfig,,MetastoreAsset,ConnectionDetails, ClientConnect,
ConnectionDetails,details(Dict[str, Any])=>ConnectionDetails,,ClientConfig,,
ClientConnect,connectors(Dict[str, Any])=>ClientConnect,,ClientConfig,GithubAPI, MinioClient, WeaviateClient,
ExtractTransformLoad,etl_processes(Dict[str, Any])=>ExtractTransformLoad,,FeatureStore,,
GithubAPI,api_client(Any)=>GithubAPI,,ClientConnect,,
MinioClient,client(Any)=>MinioClient,,ClientConnect,,
WeaviateClient,client(Any)=>WeaviateClient,,ClientConnect,,
cda.langchain,langchain_apps(Dict[str, LangChainApp])=>LangChainRepo,,Repository,LangChainApp(Repository),
LangChainApp(Repository),app_components(Dict[str, Any])=>LangChainApp,initialize_app, execute_app, delete_app,cda.langchain,,
Metastore,assets(Dict[str, MetastoreAsset])=>Metastore,add_asset, get_asset, delete_asset,cda.metastore,MetastoreAsset, FeatureStore,
ApiGateway(Repository),gateways(Dict[str, Any])=>ApiGateway,register_gateway, update_gateway, remove_gateway,cda.data-lake,,
LangchainDataLakeSystem (w/ API),systems(Dict[str, Any])=>LangchainDataLakeSystem,add_system, configure_system, remove_system,cda.data-lake,,
Cdaprod(TOP),servers(Dict[str, Server])=>Cdaprod,,,"Server"
Server,server_config(Dict[str, Any])=>Server,deploy_server, update_server, shutdown_server,Cdaprod(TOP),,
Owner,owner_details(Dict[str, Any])=>Owner,update_owner_info, delete_owner_info,,
Repository,repositories(Dict[str, Repository])=>Repository,create_repository, list_repositories, delete_repository,,"cda.data-lake, cda.langchain, cda.metastore"
cda.data-lake,data_lake_components(Dict[str, Any])=>cda.data-lake,,Repository,"LangchainDataLakeSystem (w/ API), ApiGateway(Repository)"
cda.metastore,metastore_components(Dict[str, Any])=>cda.metastore,,Repository,Metastore
MetastoreAsset,asset_config(Dict[str, Any])=>MetastoreAsset,,Metastore
